% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DEA_noninteractive.R
\name{DEA_noninteractive}
\alias{DEA_noninteractive}
\title{Data Envelopment Analysis (DEA)}
\usage{
DEA_noninteractive(Input, Output)
}
\arguments{
\item{{Input}}{{ a data frame whose rows correspond to DMUs to be evaluated and the columns
to the inputs with respect to which the evaluation is to be performed}}

\item{{Output}}{{ a data frame whose rows correspond to DMUs, the exact same as those of the input and in the same order,
to be evaluated and the columns
to the outputs with respect to which the evaluation is to be performed}}
}
\value{
A list containing;
\itemize{
\item\code{Table} {is a data frame completely describing the result; the rows correspond to the evaluated
DMUs and the columns to \code{Theta}  and the DMUs. For an inefficient DMU, i.e., with \code{Theta} < 1,
non-zero values (\code{lambda}s) on its row indicate the benchmark DMUs.}
\item\code{Improvement} {is data frame which for each inefficient DMU and a corresponding benchmark DMU shows
the required improvement of each input in order for the inefficient DMU to reach the benchmark. }
}
}
\description{
The function provides an interface for "easy" input to and "structured" output from DEA.
Data Envelopment Analysis (DEA) is a Linear Programming based methodology used to measure
the productive efficiency of decision making units (DMUs).  DEA's assumptions are
relatively simple which makes it broadly applicable, particularly, as it is also
able to benchmark multi-dimensional inputs and outputs.
Computationally it is an efficient and easy approach as it is completely based on solving
linear programming problems.
There are several variants of the approach; e.g., output or input oriented but also based
on the assumed "returns to scale" (RTS) which is a term that refers to the proportionality of changes
in output after the amounts of all inputs in production have been changed by the same factor.
There can be variable; increasing, decreasing, or constant returns to scale.
The function applies output oriented DEA with variable RTS.
}
\details{
The function requires the package \code{rDEA} which is based on \code{glpk} and provides
implementation of the necessary functionality for the application of DEA. The GNU linear programming kit (\code{glpk})
is a Linear Programming solver (and much more) and is available to R through the package \code{Rglpk}.
}
\examples{
\dontrun{

## -- Example 1 -- ##
## Load example data

data("Hamburger.Input")
data("Hamburger.Output")

## Apply DEA

res <- DEA_noninteractive(Input = Hamburger.Input, Output = Hamburger.Output)

## View result

res$Table

## View requested improvements for inefficient DMUs

res$Improvement

## -- Example 2 -- ##
## Data in a spreadheet or a dataframe containing both Inputs and Outputs
## needs to be splitted

Data <- data("Hamburger")

## Check the data

head(Data)

## Split it accordingly

Output <- Data[c("Profit","Satisfaction","Cleanliness")]
Input <- Data[c("Labor.Hrs","Op..Costs")]

## Apply DEA

res <- DEA_noninteractive(Input = Input, Output = Output)

## View result

res$Table

## View requested improvements for inefficient DMUs

res$Improvement

}

}
\references{
\itemize{
\item Charnes, A., Cooper, W. W. & Rhodes, E. (1978) Measuring the Efficiency of Decision Making Units, European Journal of Operational Research 2 (6) 429â€“444
\item Charnes, A., Cooper, W. W., Lewin, A. Y.  & Seiford, L. M. (1994) Data Envelopment Analysis: Theory, Methodology, and Applications, Springer
\item Cooper, W. W., Seiford, L. M. &  Tone, K. (2007) Data Envelopment Analysis - A Comprehensive Text with Models, Applications, References and DEA-Solver Software, 2nd Edition, Springer
}
}
\author{
Athanasios Migdalas, \email{athmig59@gmail.com}
}
